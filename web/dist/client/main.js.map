{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login-page/login-page.component.css","webpack:///./src/app/login-page/login-page.component.html","webpack:///./src/app/login-page/login-page.component.ts","webpack:///./src/app/register-page/register-page.component.css","webpack:///./src/app/register-page/register-page.component.html","webpack:///./src/app/register-page/register-page.component.ts","webpack:///./src/app/shared/layouts/auth-layout/auth-layout.component.css","webpack:///./src/app/shared/layouts/auth-layout/auth-layout.component.html","webpack:///./src/app/shared/layouts/auth-layout/auth-layout.component.ts","webpack:///./src/app/shared/layouts/site-layout/site-layout.component.css","webpack:///./src/app/shared/layouts/site-layout/site-layout.component.html","webpack:///./src/app/shared/layouts/site-layout/site-layout.component.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { AuthLayoutComponent } from './shared/layouts/auth-layout/auth-layout.component';\nimport { SiteLayoutComponent } from './shared/layouts/site-layout/site-layout.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nconst routes: Routes = [\n  {\n    path:'', component: AuthLayoutComponent, children: [\n      {path: '', redirectTo:'/login', pathMatch:'full'},\n      {path: 'login', component: LoginPageComponent},\n      {path: 'register', component: RegisterPageComponent}\n    ]\n  },\n    {\n    path:'', component: SiteLayoutComponent, children: [\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { AuthLayoutComponent } from './shared/layouts/auth-layout/auth-layout.component';\nimport { SiteLayoutComponent } from './shared/layouts/site-layout/site-layout.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    AuthLayoutComponent,\n    SiteLayoutComponent,\n    RegisterPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"form\\\" action=\\\"j_security_check\\\" class=\\\"center\\\" (ngSubmit)=\\\"onSubmit()\\\" method=\\\"post\\\" >\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"z-depth-1 grey lighten-4 row\\\" style=\\\"display: inline-block; padding: 32px 48px 0px 48px; border: 1px solid #EEE;\\\">\\r\\n\\r\\n      <div class=\\\"col s12\\\" >\\r\\n        <div class='row'>\\r\\n          <div class='col s12'>\\r\\n            <h4>Войти в систему</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class='row'>\\r\\n          <div class='input-field col s12'>\\r\\n            <input \\r\\n            formControlName=\\\"nickname\\\" \\r\\n            class='validate' \\r\\n            type='text' \\r\\n            name='j_username' \\r\\n            id='j_username'\\r\\n            placeholder=\\\"Введите ваш Nickname\\\"\\r\\n            [ngClass]=\\\"{'invalid':form.get('nickname').invalid && form.get('nickname').touched}\\\" />\\r\\n            <span class=\\\"helper-text red-text\\\"\\r\\n            *ngIf=\\\"form.get('nickname').invalid && form.get('nickname').touched\\\">Минимальный размер никнейма - 5 символов</span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class='row'>\\r\\n          <div class='input-field col s12'>\\r\\n            <input \\r\\n            formControlName=\\\"password\\\"\\r\\n            class='validate' \\r\\n            type='password' \\r\\n            name='j_password' \\r\\n            id='j_password'\\r\\n            placeholder=\\\"Введите пароль\\\"\\r\\n            [ngClass]=\\\"{'invalid':form.get('password').invalid && form.get('password').touched}\\\" />\\r\\n            <span class=\\\"helper-text red-text\\\" \\r\\n            *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\">\\r\\n            <span *ngIf=\\\"form.get('password').errors['required']\\\">Пароль не должен быть пустым</span>\\r\\n            <span *ngIf=\\\"form.get('password').errors['minlength'] && form.get('password').errors['minlength']\\\">Пароль не должен быть меньше {{form.get('password').errors['minlength']['requiredLength']}} символов.\\r\\n              <br>Сейчас {{form.get('password').errors['minlength']['actualLength']}}\\r\\n            </span>\\r\\n          </span>\\r\\n\\r\\n          </div>\\r\\n          <label style='display: block;'>\\r\\n            <a style='position: relative;top: 15px;' class='pink-text' href='#!'><b>Забыли пароль?</b></a>\\r\\n          </label>\\r\\n        </div>\\r\\n\\r\\n        <br />\\r\\n          <div class=\\\"center\\\">\\r\\n          <div class='row'>\\r\\n            <button [disabled]=\\\"form.invalid\\\"\\r\\n            type='submit' \\r\\n            name='btn_login' \\r\\n            class='col s12 btn btn-large waves-effect'>Войти</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {AuthService} from '../shared/services/auth.service'\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit, OnDestroy {\r\n\r\n  form: FormGroup\r\n  aSub:Subscription\r\n  constructor(private auth: AuthService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      nickname: new FormControl(null,[Validators.required,Validators.minLength(5)]),\r\n      password: new FormControl(null,[Validators.required, Validators.minLength(6)])\r\n    })\r\n\r\n    this.route.queryParams.subscribe((params:Params) => {\r\n      if (params['registered']) {\r\n        //можете зайти со своими данными\r\n      } else if (params['accessDenied']){\r\n        //сначала авторизуйтесь \r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.aSub) {\r\n    this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    this.form.disable()\r\n\r\n    this.auth.login(this.form.value).subscribe(\r\n      () => console.log('Login success')/*this.router.navigate['url']*/,\r\n      error => {\r\n        console.warn(error);\r\n        this.form.enable()\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLXBhZ2UvcmVnaXN0ZXItcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form action = \\\"j_security_check\\\" method=\\\"post\\\" [formGroup]=\\\"form\\\" class=\\\"center\\\" (ngSubmit)=\\\"onSubmit()\\\"  >\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"z-depth-1 grey lighten-4 row\\\" style=\\\"display: inline-block; padding: 32px 48px 0px 48px; border: 1px solid #EEE;\\\">\\r\\n\\r\\n      <div class=\\\"col s12\\\" >\\r\\n        <div class='row'>\\r\\n          <div class='col s12'>\\r\\n            <h4>Создать аккаунт</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class='row'>\\r\\n            <div class='input-field col s12'>\\r\\n              <input \\r\\n              formControlName=\\\"nickname\\\" \\r\\n              class='validate' \\r\\n              type='text' \\r\\n              name='username' \\r\\n              id='username'\\r\\n              placeholder=\\\"Введите ваш Nickname\\\"\\r\\n              [ngClass]=\\\"{'invalid':form.get('nickname').invalid && form.get('nickname').touched}\\\" />\\r\\n              <span class=\\\"helper-text red-text\\\"\\r\\n              *ngIf=\\\"form.get('nickname').invalid && form.get('nickname').touched\\\">Минимальный размер никнейма - 5 символов</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        <div class='row'>\\r\\n            <div class='input-field col s12'>\\r\\n              <input \\r\\n              formControlName=\\\"email\\\" \\r\\n              class='validate' \\r\\n              type='email' \\r\\n              name='email'\\r\\n              id='email' \\r\\n              placeholder=\\\"Введите ваш email\\\"\\r\\n              [ngClass]=\\\"{'invalid':form.get('email').invalid && form.get('email').touched}\\\" />\\r\\n              <label for='email'></label>\\r\\n              <span class=\\\"helper-text red-text\\\" \\r\\n              *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\">Введен некорректный e-mail</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class='row'>\\r\\n              <div class='input-field col s12'>\\r\\n                <input \\r\\n                formControlName=\\\"password\\\"\\r\\n                class='validate' \\r\\n                type='password' \\r\\n                name='password' \\r\\n                id='password'\\r\\n                placeholder=\\\"Введите пароль\\\"\\r\\n                [ngClass]=\\\"{'invalid':form.get('password').invalid && form.get('password').touched}\\\" />\\r\\n                <span class=\\\"helper-text red-text\\\" \\r\\n                *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\">\\r\\n                <span *ngIf=\\\"form.get('password').errors['required']\\\">Пароль не должен быть пустым</span>\\r\\n                <span *ngIf=\\\"form.get('password').errors['minlength'] && form.get('password').errors['minlength']\\\">Пароль не должен быть меньше {{form.get('password').errors['minlength']['requiredLength']}} символов.\\r\\n                  <br>Сейчас {{form.get('password').errors['minlength']['actualLength']}}\\r\\n                </span>\\r\\n              </span>\\r\\n    \\r\\n              </div>\\r\\n              <label style='display: block;'>\\r\\n                <a style='position: relative;top: 15px;' class='pink-text' href='#!'><b>Забыли пароль?</b></a>\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n        <br />\\r\\n          <div class=\\\"center\\\">\\r\\n          <div class='row'>\\r\\n            <button [disabled]=\\\"form.invalid || form.disabled\\\"\\r\\n            type='submit' \\r\\n            name='btn_login' \\r\\n            class='col s12 btn btn-large waves-effect'>Создать аккаунт</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl,Validators} from '@angular/forms';\nimport {AuthService} from '../shared/services/auth.service'\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit, OnDestroy {\n\n  form: FormGroup\n  aSub: Subscription\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      nickname: new FormControl(null,[Validators.required,Validators.minLength(5)]),\n      email: new FormControl(null,[Validators.required, Validators.email]),\n      password: new FormControl(null,[Validators.required, Validators.minLength(6)])\n    })\n  }\n\n  ngOnDestroy(){\n    if (this.aSub){\n      this.aSub.unsubscribe()\n    }\n  }\n\n  onSubmit(){\n    this.form.disable()\n    this.aSub = this.auth.register(this.form.value).subscribe(\n      () => console.log('Registration success')/*this.router.navigate['url']*/,\n      error => {\n        console.warn(error);\n        this.form.enable()\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYXlvdXRzL2F1dGgtbGF5b3V0L2F1dGgtbGF5b3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<header>\\n  <h1><a routerLink=\\\"/\\\" class=\\\"logo\\\">TimeToGame</a></h1>\\n  <ul class=\\\"nav\\\">\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/login\\\">Вход</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/register\\\">Регистрация</a>\\n    </li>\\n  </ul>\\n</header>\\n<section class=\\\"loginform\\\">\\n <router-outlet></router-outlet>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYXlvdXRzL3NpdGUtbGF5b3V0L3NpdGUtbGF5b3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  site-layout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-site-layout',\n  templateUrl: './site-layout.component.html',\n  styleUrls: ['./site-layout.component.css']\n})\nexport class SiteLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { User, NewUser } from './interfaces';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n\r\n    constructor( private http: HttpClient) {\r\n\r\n    }\r\n\r\n    register(user: NewUser): Observable<{token: string}> {\r\n        return this.http.post<{token: string}>('j_security_check', user)\r\n    }\r\n\r\n    login(user: User): Observable<{token: string}> {\r\n        return this.http.post<{token: string}>('j_security_check', user)\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'materialize-css/dist/js/materialize.js'\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}