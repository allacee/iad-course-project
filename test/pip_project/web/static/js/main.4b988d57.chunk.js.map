{"version":3,"sources":["Components/SignUpComponent.jsx","Components/LoginComponent.jsx","Components/AuthComponent.jsx","Components/HeaderComponent.jsx","Components/MenuComponent.jsx","Components/SomeInfoxImgComponent.jsx","Components/Header.jsx","Components/StartPage.jsx","Components/RatingComponent.jsx","Components/Main.jsx","Components/AllTopicsComponent.jsx","Components/AllSectionsComponent.jsx","Components/ForumSectionsComponent.jsx","Components/ForumTopicsComponent.jsx","Components/AvatarComponent.jsx","Components/ComentstoRecord.jsx","Components/RecordsComponent.jsx","Components/ForumRecordsComponent.jsx","Components/Profile/Line.jsx","Components/Profile/ProfileInfo.jsx","Components/Profile/ProfileEdit.jsx","Components/Profile/Profile.jsx","Components/BoatConstructor/BoatPropertyProgress.jsx","Components/BoatConstructor/PropertyInfo.jsx","Components/BoatConstructor/BoatInfo.jsx","Components/BoatConstructor/DetailsGroup.jsx","Components/BoatConstructor/BoatConstructor.jsx","App.js","serviceWorker.js","index.js","Components/utocka.png","react-toolbox/theme.js"],"names":["SignUpComponentToConnect","state","username","password","error","didSignUp","handleChange","name","value","_this","setState","Object","objectSpread","defineProperty","toLogin","props","dispatch","type","setError","msg","signUp","length","reg","test","fetch","method","body","JSON","stringify","then","response","ok","json","resp","success","catch","err","message","statusText","react_default","a","createElement","Button_default","onClick","this","flat","renderAfterSignUp","input_default","label","id","onChange","bind","style","color","className","raised","primary","marginRight","Component","SignUpComponent","connect","LoginComponentToConnect","toSignUp","login","form","FormData","set","credentials","window","location","href","LoginComponent","AuthComponent","isRegistration","Components_SignUpComponent","Components_LoginComponent","HeaderComponent","author1","author2","group","MenuComponent","logout","document","cookie","AppBar_default","theme","title","fixed","Navigation_default","Link_default","icon","SomeInfoxImgComponent","some","info","innerWidth","src","utocka","width","height","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pageInfo","Components_MenuComponent","authStore","createStore","action","newState","assign","errorMsg","successMsg","pathname","StartPage","Components_Header","es","store","Components_AuthComponent","Components_HeaderComponent","RatingComponent","users","email","gender","birthday","sportsRate","rate","concat","result","alert","console","log","table","i","p","push","initialState","parts","split","pop","shift","getUsername","dataStore","Components_SomeInfoxImgComponent","Components_RatingComponent","AllTopicsComponent","topics","topic","path","list","sublink","link","AllSectionsComponent","sections","section","ForumSectionsComponent","Components_AllSectionsComponent","indexOf","ForumTopicsComponent","Components_AllTopicsComponent","AvatarComponent","class","umd_default","userid","customStyles","content","top","left","right","bottom","transform","ComentstoRecordComponent","coments","coment","comentid","nowuser","modalchangecomIsOpen","changecom","changecomid","changei","user","delcoment","nowuserid","nowgroup","removeItem","changecoment","change","getElementById","closeModalchangecom","recordid","newcoment","prevState","records","update","$splice","_this2","open","Components_AvatarComponent","openModalchangecom","lib_default","isOpen","onRequestClose","contentLabel","RecordsComponent","record","modalrecordIsOpen","modalcomentIsOpen","modalchangerecIsOpen","changerecord","changerecordid","delrecord","addrecord","closeModalrecord","closeModalchangerec","addcoment","closeModalcoment","Components_ComentstoRecord","openModalchangerec","openModalcoment","path1","decodeURI","openModalrecord","toggleChildMenu","ForumRecordsComponent","Components_RecordsComponent","Line","text","ProfileInfo","userAvatar","Profile_Line","sportRate","ProfileEdit","cancelEditing","toProfileInfo","forceUpdate","Redirect","to","required","maxLength","Profile","currentUser","selectedUser","match","es_Link","Route","render","Profile_ProfileEdit","exact","Profile_ProfileInfo","BoatPropertyProgress","min","max","PropertyInfo","BoatInfo","createDetailsTags","tags","details","forEach","detail","boat","speed","boost","maxWeight","control","weight","price","countProperties","comp","alt","BoatConstructor_BoatPropertyProgress","BoatConstructor_PropertyInfo","DetailsGroup","createDetailsPics","detailsPics","detailCard","BoatConstructor","getProducers","getBoats","createDetailsGroupsFromProducer","producer","groupsNames","detailsGroups","j","BoatConstructor_DetailsGroup","handleBoatChange","activeBoat","createBoatsOptions","options","boats","activeProducer","BoatConstructor_BoatInfo","App","BrowserRouter","Switch","component","ForumRecords","ForumTopics","ForumSections","Main","Boolean","hostname","ReactDOM","ThemeProvider_default","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","RTButton","button","rippleWrapper","squared","solid","floating","mini","toggle","accent","neutral","inverse","RTRipple","ripple","rippleRestarting","rippleActive","RTInput","input","withIcon","inputElement","bar","hint","filled","counter","disabled","errored","hidden","RTNavigation","horizontal","vertical","RTLink","active","RTAppBar","appBar","scrollHide","inner","leftIcon","rightIcon"],"mappings":"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","file":"static/js/main.4b988d57.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Input from 'react-toolbox/lib/input';\r\nimport Button from 'react-toolbox/lib/button/Button';\r\n\r\nclass SignUpComponentToConnect extends Component {\r\n    state = { username: '', password: '', error: '', didSignUp: false };\r\n\r\n    handleChange = (name, value) => {\r\n        this.setState({ ...this.state, [name]: value });\r\n    };\r\n\r\n    toLogin = () => this.props.dispatch({\r\n        type: 'SET_REGISTRATION',\r\n        value: false\r\n    });\r\n\r\n    setError = (msg) => {\r\n        this.handleChange('error', msg);\r\n    };\r\n\r\n    signUp = () => {\r\n        if (this.state.username === null || this.state.username.length < 1) {\r\n            this.setError('Необходимо ввести имя пользователя.');\r\n            return;\r\n        }\r\n        else {\r\n            if (reg.test(this.state.username) === false  & this.state.username.length > \r\n            1 & this.state.username != null){\r\n               this.setError('Необходимо ввести имя пользователя в формате email');\r\n            return; \r\n            }\r\n        }\r\n        if (this.state.password === null || this.state.password.length < 1) {\r\n            this.setError('Необходимо ввести пароль.');\r\n            return;\r\n        }\r\n\r\n        fetch('/users/registration/new', { //адресс на беке регистрации \r\n            method: 'POST',\r\n            body: JSON.stringify({ username: this.state.username, password: this.state.password }) //в каком формете передать\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok)\r\n                this.setError('Ошибка: неверный ответ от сервера.');\r\n            else {\r\n                response.json().then((resp) => {\r\n                    if (resp.success === \"true\") {\r\n                        this.setError('');\r\n                        this.handleChange('didSignUp', true);\r\n                    }\r\n                    else {\r\n                        this.setError(resp.error);      //отловить illega exception с бека \r\n                    }\r\n                }).catch((err) => {\r\n                    this.handleChange('error', err.message);\r\n                });\r\n\r\n            }\r\n        })\r\n        .catch((error) => {\r\n           this.setError(\"Не получилось отправить запрос: \" + error.statusText);\r\n        });\r\n    };\r\n\r\n    renderAfterSignUp() {\r\n        return (\r\n            <div>\r\n                <h2>Регистрация успешно выполнена</h2>\r\n                <Button onClick={this.toLogin} flat>Перейти к авторизации</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.didSignUp)\r\n            return this.renderAfterSignUp();\r\n\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <b>Регистрация</b>\r\n                    <Input type='email' label='Email address' id=\"user\"  name=\"username\" value={this.state.username}\r\n                           onChange={this.handleChange.bind(this, 'username')} />\r\n                    <Input type=\"password\" id=\"pass\" label=\"Пароль\" name=\"password\" value={this.state.password}\r\n                           onChange={this.handleChange.bind(this, 'password')} />\r\n\r\n                    \r\n                    <span style={{color: \"red\"}}> {this.state.error} </span>\r\n                   \r\n                        <br/>\r\n                    <Button className=\"button2\"  raised primary style={{marginRight: '5px'}} onClick={this.signUp}>Зарегистрироваться</Button>\r\n                    <Button className=\"button2\" onClick={this.toLogin} flat>Авторизация</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\nconst SignUpComponent = connect()(SignUpComponentToConnect);\r\nexport default SignUpComponent;","\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Input from 'react-toolbox/lib/input';\r\nimport Button from 'react-toolbox/lib/button/Button';\r\n\r\nclass LoginComponentToConnect extends Component {\r\n    state = { username: '', password: '', error: '' };\r\n\r\n    handleChange = (name, value) => {\r\n        this.setState({ ...this.state, [name]: value });\r\n    };\r\n\r\n    toSignUp = () => this.props.dispatch({\r\n        type: 'SET_REGISTRATION',\r\n        value: true\r\n    });\r\n\r\n    login = () => {\r\n        if (this.state.username === null || this.state.username.length < 1) {\r\n            this.handleChange('error', 'Необходимо ввести имя пользователя.');\r\n            return;\r\n        }\r\n        if (this.state.password === null || this.state.password.length < 1) {\r\n            this.handleChange('error', 'Необходимо ввести пароль.');\r\n            return;\r\n        }\r\n        var form = new FormData();\r\n        form.set(\"j_username\", this.state.username);\r\n        form.set(\"j_password\", this.state.password);\r\n\r\n        fetch('j_security_check', {\r\n            method: \"POST\",\r\n            body: form,\r\n            credentials: 'include' \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            this.handleChange('error', '');\r\n                            window.location.href = \"/competitions/all\";            //страничка пользовател например профиль пользователя \r\n                        }\r\n                        else {\r\n                            this.handleChange('error', resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        this.handleChange('error', err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.handleChange('error', \"Не получилось отправить запрос: \" + error.statusText);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form id=\"login-form\">\r\n                    <b>Авторизация</b><br />\r\n                    <Input type='email' label='Email address' id=\"user\" name=\"j_username\" value={this.state.username}\r\n                        onChange={this.handleChange.bind(this, 'username')} />\r\n                    <Input type=\"password\" id=\"pass\" label=\"Пароль\" name=\"j_password\" value={this.state.password}\r\n                        onChange={this.handleChange.bind(this, 'password')} />\r\n\r\n\r\n                    <span style={{ color: \"red\" }}> {this.state.error} </span>\r\n                    <br />\r\n                    <Button className=\"button1\" raised primary style={{ marginRight: '5px' }} onClick={this.login}>Войти</Button>\r\n                    <Button className=\"button2\" onClick={this.toSignUp} flat>Перейти к регистрации</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoginComponent = connect()(LoginComponentToConnect);\r\nexport default LoginComponent;\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SignUpComponent from '../Components/SignUpComponent';\r\nimport LoginComponent from '../Components/LoginComponent';\r\n\r\nconst AuthComponentToConnect = function (props) {\r\n    if (props.isRegistration) {\r\n        return <SignUpComponent />;\r\n    }\r\n    else {\r\n        return <LoginComponent />;\r\n    }\r\n};\r\n\r\nconst AuthComponent = connect((state) => state)(AuthComponentToConnect);\r\nexport default AuthComponent;","\r\nimport React from 'react';\r\n\r\nfunction HeaderComponent(props) {\r\n    return (\r\n        <div id=\"bottomhead\">\r\n            {props.author1}, {props.author2} {props.group}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport Button from 'react-toolbox/lib/button/Button';\r\nimport AppBar from 'react-toolbox/lib/app_bar/AppBar';\r\nimport Navigation from 'react-toolbox/lib/navigation/Navigation';\r\nimport Link from 'react-toolbox/lib/link/Link';\r\nimport { connect } from 'react-redux';\r\nimport utocka from './utocka.png';\r\n\r\nclass MenuComponent extends Component {\r\n  logout = () => {\r\n        document.cookie = \"\";\r\n        if (window.location==\"/users/profile/logout\") {window.location.href = \"/\";}\r\n    };\r\n  \r\n  \r\n\r\n \trender(){\r\n\t\treturn (\r\n\t\t\t  <div id=\"menu\">\r\n\t\t\t    <AppBar theme='appBar' title ='Клуб \"Жёлтая уточка\"' fixed = 'true'>\r\n\r\n          <Navigation type='horizontal'>\r\n              <Link href=\"/users/all\" label=\"Главная\"/>\r\n              <Link href=\"/last\"  label=\"Сообщения\"/>\r\n              <Link href=\"/sections\"  label=\"Форум\"/>\r\n              <Link href=\"/users/profile\" label=\"Профиль\" icon=\"person\"/>\r\n              <Link href=\"/boats\" label=\"Конструктор лодки\"/>\r\n              <Link href=\"/users/profile/logout\" label=\"Выйти\" onClick={this.logout}/> \r\n           </Navigation>\r\n          </AppBar>\r\n        </div>\r\n  \r\n\t\t\t);\r\n\t}\r\n}\r\nconst Menu = connect((state) => state) (MenuComponent);\r\nexport default MenuComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport utocka from './utocka.png';\r\n\r\nfunction SomeInfoxImgComponent (props){\r\n  var some = props.info;\r\n  if (window.innerWidth<1191) {\r\n      var some = \"\";}\r\n  \treturn(\r\n\r\n  \t\t<div id=\"heads\">\r\n      <div>\r\n      <img className=\"utocka\" src={utocka} width=\"150\" height=\"150\" />\r\n      </div>\r\n       <div id=\"info\"> <b>Клуб \"Желтая уточка\"</b>\r\n      <div id=\"some\"> {some} </div>\r\n        </div>\r\n       </div>\r\n  \t\t)\r\n  \r\n}\r\n\r\nexport default SomeInfoxImgComponent;","\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport Menu from '../Components/MenuComponent';\r\nimport SomeInfoxImgComponent from './SomeInfoxImgComponent';\r\n\r\nclass Header extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.pageInfo = props['pageInfo'];\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Menu />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","\r\nimport AuthComponent from '../Components/AuthComponent';\r\nimport HeaderComponent from '../Components/HeaderComponent';\r\nimport Header from '../Components/Header';\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n\r\nconst initialState = { isRegistration: false, errorMsg: '', successMsg: '' };\r\nconst authStore = createStore(authForm, initialState);\r\nfunction authForm(state, action) {\r\n    let newState = Object.assign({}, state);\r\n\r\n    switch (action.type) {\r\n        case 'SET_REGISTRATION':\r\n            newState.isRegistration = action.value;\r\n            newState.errorMsg = '';\r\n            newState.successMsg = '';\r\n            return newState;\r\n        case 'SET_ERROR':\r\n            newState.errorMsg = action.value;\r\n            newState.successMsg = '';\r\n            return newState;\r\n        case 'SET_SUCCESS':\r\n            newState.successMsg = action.value;\r\n            newState.errorMsg = '';\r\n            return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n}\r\nif (window.location.pathname == \"/\" || window.location.pathname == \"/users/profile/logout\"){\r\ndocument.title = \"Start Page\";\r\n}\r\nclass StartPage extends Component {\r\n\r\nrender() {\r\n\treturn (\r\n\t\t\t <div id=\"main\"> \r\n      <div id=\"header\">\r\n      \t<Header/>\r\n      </div>\r\n      \r\n      <div id=\"all\">\r\n\r\n<Provider store={authStore}>\r\n        <AuthComponent />\r\n    </Provider>\r\n\r\n       </div>\r\n      <div id=\"footer\">\r\n        <div id=\"bot\">\r\n        \t<HeaderComponent author1=\"@ Хрулев Виктор\" author2=\"Возжаев Артем\" group=\"ИТМО 2018\" />\r\n        </div>\r\n      </div>\r\n    \t</div>\r\n\r\n\t\t);\r\n}\r\n\r\n}\r\n\r\nexport default StartPage;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass RatingComponent extends Component {\r\n\r\n    state = {\r\n        users: [\r\n            /*{ username: xx,email: xx, id: xx, gender: xx, birthday: xx, sportsRate: xx,  rate:xx },\r\n            */                                        //будет ли json такой \r\n            { \"username\": \"xx\",\"email\": \"xx\", \"id\": 1, \"gender\": \"xx\", \"birthday\": \"xx\", \"sportsRate\": 120,  \"rate\":3 },\r\n            { \"username\": \"xx\",\"email\": \"xx\", \"id\": 1, \"gender\": \"xx\", \"birthday\": \"xx\", \"sportsRate\": 120,  \"rate\":1 },\r\n            { \"username\": \"xx\",\"email\": \"xx\", \"id\": 1, \"gender\": \"xx\", \"birthday\": \"xx\", \"sportsRate\": 120,  \"rate\":2 }\r\n            \r\n            //\r\n        ]\r\n    };\r\n\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        fetch('/users/all', {\r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                            this.state.users = this.state.users.concat(resp.result);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('Не получилось отправить запрос: ', error);\r\n            });\r\n    }\r\n\r\n    \r\n   \r\n    render() {\r\n    \r\n        let table = [];\r\n        for (let i = 0; i <= 2; i++) {                               {/* измениь число*/}         \r\n            console.log(this.state.users[i]);\r\n            let p = this.state.users[i];\r\n            table.push (<tr>\r\n                <td>{p.username}</td>                              {/* уточнить в каком формаье вернктся json*/}\r\n                <td>{p.rate}</td>\r\n                <td>{p.sportsRate}</td>\r\n            </tr>);\r\n\r\n        }\r\n               \r\n\r\n        return (\r\n            <div id=\"RaitingComponent\">\r\n                <table className=\"table_blur\">\r\n                    <tr>\r\n                        <th>Пользователь</th>\r\n                        <th>Рейтинг</th>\r\n                        <th>Спортивный разряд</th>\r\n                    </tr>\r\n                    {table}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Rating = connect((state) => state)(RatingComponent);\r\nexport default RatingComponent;\r\n\r\n","\r\nimport HeaderComponent from '../Components/HeaderComponent';\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport utocka from './utocka.png';\r\nimport Menu from '../Components/MenuComponent';\r\nimport SomeInfoxImgComponent from '../Components/SomeInfoxImgComponent';\r\nimport RatingComponent from '../Components/RatingComponent';\r\n\r\nif (window.location.pathname == \"/users/all\"){\r\ndocument.title = \"Main Page\";\r\n}\r\n \r\nfunction getUsername() {\r\n    let value = \"; \" + document.cookie;\r\n    let parts = value.split(\"; \" + 'username' + \"=\");\r\n    if (parts.length === 2)\r\n        return parts.pop().split(\";\").shift();\r\n    return \"username not set\";\r\n}\r\n\r\nconst initialState = {username: getUsername() };\r\n\r\nfunction reducerFunc (state, action) {\r\n    let newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case 'SET_USERNAME':\r\n            newState.username = action.username;\r\n            return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n}\r\n\r\nconst dataStore = createStore(reducerFunc, initialState);\r\n    \r\nclass StartPage extends Component {   \r\n   \r\nrender() {\r\n\treturn (\r\n<div>\r\n<Provider store={dataStore}>\r\n<Menu/> \r\n</Provider>\r\n<SomeInfoxImgComponent info= \"На данной странице вы можете ознакоомится с рейтингом пользователей)\"/>     \r\n\t\t\t <div id=\"main_mainp\"> \r\n          <RatingComponent/>\r\n      <div id=\"footer\">\r\n        <div id=\"bot\">\r\n        \t<HeaderComponent author1=\"@ Хрулев Виктор\" author2=\"Возжаев Артем\" group=\"ИТМО 2018\" />\r\n        </div>\r\n      </div>\r\n    \t</div>\r\n</div>\r\n\t\t);\r\n}\r\n\r\n}\r\n\r\nexport default StartPage;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport Link from 'react-toolbox/lib/link/Link';\r\n\r\n\r\nclass AllTopicsComponent extends Component {\r\n\r\n    state = {\r\n        topics: [\r\n            /*{ topic: xx},\r\n            */                                        //будет ли json такой \r\n            { \"topic\": \"Топ лодки\"},\r\n            { \"topic\": \"2\"},\r\n            { \"topic\": \"3\"}\r\n        ]\r\n    };\r\n\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        let path = window.location.pathname;\r\n        path = path.split('/');\r\n        \r\n        path = path[2];\r\n        path = \"/forum/\" + path + \"/all\";            {/*правильно ли path */}\r\n       \r\n        \r\n        fetch( path, {          \r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                           this.setState(resp.result);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Не получилось отправить запрос: ' + error.statusText);\r\n            });\r\n    }\r\n\r\n    \r\n   \r\n    render() {\r\n        let list = [];\r\n        for (let i = this.state.topics.length -1; i >= 0; i--) {\r\n            console.log(this.state.topics[i]);\r\n            let p = this.state.topics[i];\r\n            let sublink = window.location.pathname;\r\n            sublink = sublink.split('/');\r\n            sublink = sublink[2];\r\n            let link = \"/records/\"+ sublink + \"/\" + p.topic + \"/all\" ;         \r\n            list.push (\r\n                <li><Link href={link}  label={p.topic}/></li>                         \r\n            );\r\n\r\n        }\r\n               \r\n\r\n        return (\r\n            <div id=\"SectionsComponent\">\r\n                <ol className=\"pills\">\r\n                    {list}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Topics = connect((state) => state)(AllTopicsComponent);\r\nexport default AllTopicsComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport Link from 'react-toolbox/lib/link/Link';\r\nimport AllTopics from '../Components/AllTopicsComponent';\r\nclass AllSectionsComponent extends Component {\r\n\r\n    state = {\r\n        sections: [\r\n            /*{ section: xx},\r\n            */                                        //будет ли json такой \r\n            { \"section\": \"Топ лодки\"},\r\n            { \"section\": \"2\"},\r\n            { \"section\": \"3\"}\r\n        ]\r\n    };\r\n\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        fetch('/forum/sections/all', {\r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                           this.setState(resp.result);\r\n                        }\r\n                        else {\r\n                            console.log(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('Не получилось отправить запрос: ' + error.statusText);\r\n            });\r\n    }\r\n\r\n    \r\n   \r\n    render() {\r\n        let list = [];\r\n        for (let i = this.state.sections.length -1; i >= 0; i--) {\r\n            console.log(this.state.sections[i]);\r\n            let p = this.state.sections[i];\r\n            let link = \"/topics/\"+ p.section + \"/all\" ;\r\n            list.push (\r\n                <li><Link href={link}  label={p.section}/></li>                         \r\n            );\r\n\r\n        }\r\n               \r\n\r\n        return (\r\n            <div id=\"SectionsComponent\">\r\n                <ol className=\"pills\">\r\n                    {list}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Sections = connect((state) => state)(AllSectionsComponent);\r\nexport default AllSectionsComponent;","import HeaderComponent from '../Components/HeaderComponent';\r\nimport React from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport utocka from './utocka.png';\r\nimport Menu from '../Components/MenuComponent';\r\nimport SomeInfoxImgComponent from '../Components/SomeInfoxImgComponent';\r\nimport Link from 'react-toolbox/lib/link/Link';\r\nimport AllSections from '../Components/AllSectionsComponent';\r\nif (window.location.pathname == \"/sections\"){\r\ndocument.title = \"Forum Page\";\r\n}\r\n\r\nfunction getUsername() {\r\n    let value = \"; \" + document.cookie;\r\n    let parts = value.split(\"; \" + 'username' + \"=\");\r\n    if (parts.length === 2)\r\n        return parts.pop().split(\";\").shift();\r\n    return \"username not set\";\r\n}\r\n\r\nconst initialState = {username: getUsername() };\r\n\r\nfunction reducerFunc (state, action) {\r\n    let newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case 'SET_USERNAME':\r\n            newState.username = action.username;\r\n            return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n}\r\n\r\nconst dataStore = createStore(reducerFunc, initialState);\r\n    \r\nclass ForumSectionsComponent extends Component {   \r\n\r\nrender() {\r\n\treturn (\r\n<div>\r\n<Provider store={dataStore}>\r\n<Menu/> \r\n</Provider>\r\n<SomeInfoxImgComponent info= \"Выберите интересующий вас раздел форума)\"/>     \r\n\t\t\t <div id=\"main_forum\"> \r\n                <AllSections/>\r\n\r\n      <div id=\"footer\">\r\n        <div id=\"bot\">\r\n        \t<HeaderComponent author1=\"@ Хрулев Виктор\" author2=\"Возжаев Артем\" group=\"ИТМО 2018\" />\r\n        </div>\r\n      </div>\r\n    \t</div>\r\n</div>\r\n\t\t);\r\n}\r\n\r\n}\r\n\r\nexport default ForumSectionsComponent;","import HeaderComponent from '../Components/HeaderComponent';\r\nimport React from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport utocka from './utocka.png';\r\nimport Menu from '../Components/MenuComponent';\r\nimport SomeInfoxImgComponent from '../Components/SomeInfoxImgComponent';\r\nimport AllTopics from '../Components/AllTopicsComponent'\r\nimport Link from 'react-toolbox/lib/link/Link';\r\n\r\nif (window.location.pathname.indexOf('/topics') + 1){\r\ndocument.title = \"Forum Page\";\r\n}\r\n\r\nfunction getUsername() {\r\n    let value = \"; \" + document.cookie;\r\n    let parts = value.split(\"; \" + 'username' + \"=\");\r\n    if (parts.length === 2)\r\n        return parts.pop().split(\";\").shift();\r\n    return \"username not set\";\r\n}\r\n\r\nconst initialState = {username: getUsername() };\r\n\r\nfunction reducerFunc (state, action) {\r\n    let newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case 'SET_USERNAME':\r\n            newState.username = action.username;\r\n            return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n}\r\n\r\nconst dataStore = createStore(reducerFunc, initialState);\r\n    \r\nclass ForumTopicsComponent extends Component {   \r\n\r\nrender() {\r\n\treturn (\r\n<div>\r\n<Provider store={dataStore}>\r\n<Menu/> \r\n</Provider>\r\n<SomeInfoxImgComponent info= \"Выберите интересующую вас тему обсуждения)\"/>     \r\n\t\t\t <div id=\"main_forum\"> \r\n                <AllTopics/>\r\n      <div id=\"footer\">\r\n        <div id=\"bot\">\r\n        \t<HeaderComponent author1=\"@ Хрулев Виктор\" author2=\"Возжаев Артем\" group=\"ИТМО 2018\" />\r\n        </div>\r\n      </div>\r\n    \t</div>\r\n</div>\r\n\t\t);\r\n}\r\n\r\n}\r\n\r\nexport default ForumTopicsComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Img from 'react-image'\r\n\r\n\r\nfunction AvatarComponent(props) {\r\n\r\n    return (\r\n        <figure class=\"image is-1by1\">\r\n            <Img class=\"is-square avatar\" src={props.userid} />\r\n        </figure>\r\n    );\r\n}\r\n\r\nexport default AvatarComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport Avatar from '../Components/AvatarComponent'; \r\nimport Button from 'react-toolbox/lib/button/Button';\r\nimport update from 'immutability-helper';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)',\r\n    width                 : '300px',\r\n    height                : '200px'\r\n  }\r\n};\r\n\r\n\r\nclass ComentstoRecordComponent extends Component {\r\n\r\n    state = {\r\n        coments: [\r\n            /*{ topic: xx},\r\n            */                                        //будет ли json такой \r\n            \r\n              { \"username\": \"vasya\", \"coment\": \"jkllllllllhgjffmfhkfllllllllljtyutuuufgfghjfh\", \"userid\": \"1\", \"comentid\": \"1\", \"group\": \"user\"},  \r\n               { \"username\": \"vasya\", \"coment\": \"jkllllllllhgjffmfhkfllllllllljtyutuuufgfghjfh\", \"userid\": \"2\", \"comentid\": \"2\", \"group\": \"admin\"},\r\n                { \"username\": \"vasya\", \"coment\": \"jkllllllllhgjffmfhkfllllllllljtyutuuufgfghjfh\", \"userid\": \"3\", \"comentid\": \"3\", \"group\": \"moder\"},\r\n        ],\r\n\r\n        nowuser: [\r\n                {\"username\": \"vasya\",  \"userid\": \"1\",  \"group\": \"admin\"}\r\n        ],\r\n\r\n\r\n        modalchangecomIsOpen: false,\r\n\r\n        changecom: \"\",\r\n\r\n        changecomid: \"\", \r\n\r\n        changei: \"\",\r\n\r\n        user: \"\",\r\n\r\n    };\r\n\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        let path = this.props.recordid;\r\n        path = \"/forum/records/\" + path + \"/all\";    {/*правильно ли path */}\r\n   \r\n        fetch( path, {          \r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                        this.state.coments = this.state.coments.concat(resp.result);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Не получилось отправить запрос: ' + error.statusText);\r\n            });\r\n\r\n\r\n\r\n            fetch( 'users/profile/', {          \r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                          this.state.nowuser = this.state.nowuser.concat(resp.result);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Не получилось отправить запрос: ' + error.statusText);\r\n            });\r\n\r\n\r\n     let newcoment = this.props.newcoment;\r\n     this.state.coments = this.state.coments.concat(newcoment);\r\n    }\r\n\r\n    openModalchangecom() {\r\n    this.setState({modalchangecomIsOpen: true});\r\n    };\r\n\r\n    closeModalchangecom() {\r\n    this.setState({modalchangecomIsOpen: false});\r\n    };\r\n\r\n    \r\n\r\n    settochangecom(comentid, i, userid) {\r\n        this.setState({changecomid: comentid});\r\n        this.setState({changei: i});\r\n        this.setState({user: userid});\r\n    }\r\n\r\n    removeItem(i) {                                                               //можетне понадобится т.к при запросе на сервер автоматически обнавится state \r\n             this.setState((prevState) => ({\r\n             records: update(prevState.records, {$splice: [[i, 1]]})\r\n             }))\r\n            };\r\n\r\n    delcoment = (comentid, i, userid) => {\r\n        let p = this.state.nowuser[0];\r\n        let nowuserid = p.userid;\r\n        let nowgroup = p.group;\r\n        if ((nowgroup==\"admin\" || nowgroup==\"moder\") || ((nowgroup==\"user\") && (nowuserid == userid))) {\r\n\r\n        fetch('/records/delete/comment/' + comentid, {\r\n            method: 'POST',\r\n            body: JSON.stringify()      //? что передать в body \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    alert('Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            this.removeItem(i);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert('json parse error: ' + err);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Не удалось отправить запрос: \" + error);\r\n            });\r\n\r\n            }\r\n\r\n    else {alert (\"Недостаточно прав\");}\r\n    };\r\n\r\n\r\n\r\n    changecoment = () => {\r\n        let change = document.getElementById('changeTextArea1').value;\r\n        this.setState({changecom: change});\r\n        let p = this.state.nowuser[0];\r\n        let nowuserid = p.userid;\r\n        let nowgroup = p.group;\r\n        \r\n        if ((nowgroup==\"admin\" || nowgroup==\"moder\") || ((nowgroup==\"user\") && (nowuserid == this.state.user))) {\r\n        \r\n        fetch('/forum/records/change/comment/' + this.state.changecomid, {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.changecom)      //? что передать в body \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    alert('Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            let i = this.state.changei;\r\n                            let g = this.state.coments[i];\r\n                            g.coment = this.state.changecom;\r\n                            this.closeModalchangecom();\r\n                            }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert('json parse error: ' + err);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Не удалось отправить запрос: \" + error);\r\n            });\r\n        }\r\n\r\n    else {alert (\"Недостаточно прав\");}\r\n    };\r\n    \r\n   \r\n    render() {\r\n        let table = [];\r\n        let open = this.props.open;\r\n        for (let i = this.state.coments.length -1; i >= 0; i--) {\r\n            console.log(this.state.coments[i]);\r\n            let p = this.state.coments[i];\r\n            let user = \"/imgUpload/avatar_\" + p.userid + \".png\";\r\n            let coment = p.comentid;\r\n            let userid = p.userid;\r\n            table.push (<tr>\r\n                <td>\r\n                <tr><Avatar userid = {user}/></tr> \r\n                <tr>{p.username} </tr>\r\n                </td>\r\n                <td>\r\n                <tr>{p.coment}</tr>\r\n                </td>\r\n                <td> \r\n                <tr> <Button onClick={(coment, i, userid) => this.delcoment(coment, i, userid)}>Удалить коментарий</Button></tr>\r\n                <tr> <Button onClick={(coment, i, userid) => this.settochangecom(coment, i, userid), this.openModalchangecom.bind(this)}>Изменить коментарий</Button></tr>\r\n                </td>\r\n            </tr>);\r\n        }\r\n   \r\n\r\n        console.log(table);\r\n        if (open == true) {\r\n        \r\n        return ([\r\n            <div id=\"commentsinrecord\">\r\n                <table className=\"table_blur\">\r\n                <caption>Коментарии </caption>\r\n                    <tr>\r\n                        <th>Пользователь</th>\r\n                        <th>Коментарий</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    {table}\r\n                </table>\r\n            </div>,\r\n\r\n            <div id =\"Model3\">\r\n        <Modal\r\n          isOpen={this.state.modalchangecomIsOpen}\r\n          onRequestClose={this.closeModalchangecom.bind(this)}\r\n          style={customStyles}\r\n          contentLabel=\"ChangeCom Modal\">\r\n\r\n        <div>Изменить коментарий</div>\r\n          <form>\r\n           <textarea id = \"changeTextArea1\" name=\"changerec\"></textarea>                              {/*neme для идентефикации поля*/}\r\n            <Button onClick={this.changecoment}>Изменить коментарий</Button>\r\n          </form> \r\n          </Modal>\r\n        </div>\r\n\r\n            ]\r\n        );\r\n\r\n    }\r\n\r\n    else\r\n    {\r\n       return (\r\n            \r\n                <div> </div>\r\n            \r\n        ); \r\n    }\r\n    }\r\n}\r\n\r\nconst ComentstoRecord = connect((state) => state)(ComentstoRecordComponent);\r\nexport default ComentstoRecordComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport Avatar from '../Components/AvatarComponent'; \r\nimport ComentstoRecord from '../Components/ComentstoRecord'; \r\nimport Button from 'react-toolbox/lib/button/Button';\r\nimport update from 'immutability-helper'\r\nimport Modal from 'react-modal';\r\n\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)',\r\n    width                 : '300px',\r\n    height                : '200px'\r\n  }\r\n};\r\n\r\nclass RecordsComponent extends Component {\r\n\r\n    state = {\r\n        records: [\r\n            /*{ topic: xx},\r\n            */                                        //будет ли json такой \r\n            \r\n              { \"username\": \"vasya\", \"record\": \"jkllllllllhgjffmfhkfllllllllljtyutuuufgfghjfh\", \"userid\": \"1\", \"recordid\": \"1\", \"group\": \"user\"},  \r\n               { \"username\": \"vasya\", \"record\": \"jkllllllllhgjffmfhkfllllllllljtyutuuufgfghjfh\", \"userid\": \"2\", \"recordid\": \"2\", \"group\": \"admin\"},\r\n                { \"username\": \"vasya\", \"record\": \"jkllllllllhgjffmfhkfllllllllljtyutuuufgfghjfh\", \"userid\": \"3\", \"recordid\": \"3\", \"group\": \"moder\"},\r\n        ],\r\n\r\n\r\n        open: false,\r\n    \r\n        nowuser: [\r\n                {\"username\": \"vasya\",  \"userid\": \"1\",  \"group\": \"user\"}\r\n        ],\r\n\r\n        modalrecordIsOpen: false,\r\n\r\n        modalcomentIsOpen: false,\r\n\r\n        modalchangerecIsOpen: false,\r\n\r\n        changerecord: \"\",\r\n\r\n        changerecordid: \"\", \r\n\r\n        changei: \"\",\r\n\r\n        user: \"\",\r\n        \r\n        recordid: \"\",\r\n\r\n        newcoment: \"\",\r\n        \r\n    };\r\n\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n\r\n        let path = window.location.pathname;\r\n        path = path.split('/');\r\n        let path0 = path[2];\r\n        let path1 = path[3];\r\n        path = \"/forum/\" + path0 + \"\" + path1 + \"/all\";    {/*правильно ли path */}\r\n    \r\n        fetch( path, {          \r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                          this.state.records = this.state.records.concat(resp.result);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Не получилось отправить запрос: ' + error.statusText);\r\n            });\r\n\r\n            fetch( 'users/profile/', {          \r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    this.handleChange('error', 'Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === true) {\r\n                          this.state.nowuser = this.state.nowuser.concat(resp.result);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Не получилось отправить запрос: ' + error.statusText);\r\n            });\r\n\r\n            \r\n    }\r\n\r\n\r\n    openModalrecord() {\r\n    this.setState({modalrecordIsOpen: true});\r\n    };\r\n\r\n    closeModalrecord() {\r\n    this.setState({modalrecordIsOpen: false});\r\n    };\r\n\r\n     openModalcoment() {\r\n    this.setState({modalcomentIsOpen: true});\r\n    };\r\n\r\n    closeModalcoment() {\r\n    this.setState({modalcomentIsOpen: false});\r\n    };\r\n\r\n     openModalchangerec() {\r\n    this.setState({modalchangerecIsOpen: true});\r\n    };\r\n\r\n    closeModalchangerec() {\r\n    this.setState({modalchangerecIsOpen: false});\r\n    };\r\n\r\n    setrecordid(record) {\r\n         this.setState({recordid: record});\r\n\r\n    }\r\n\r\n    settochangerec(recordid, i, userid) {\r\n        this.setState({changerecordid: recordid});\r\n        this.setState({changei: i});\r\n        this.setState({user: userid});\r\n    }\r\n\r\n    removeItem(i) {\r\n             this.setState((prevState) => ({                                                  //можетне понадобится т.к при запросе на сервер автоматически обнавится state \r\n             records: update(prevState.records, {$splice: [[i, 1]]})\r\n             }))\r\n            };\r\n\r\n    delrecord = (recordid, i, userid) => {\r\n        let p = this.state.nowuser[0];\r\n        let nowuserid = p.userid;\r\n        let nowgroup = p.group;\r\n        if ((nowgroup==\"admin\" || nowgroup==\"moder\") || ((nowgroup==\"user\") && (nowuserid == userid))) {\r\n        \r\n        fetch('/forum/records/delete/' + recordid, {\r\n            method: 'POST',\r\n            body: JSON.stringify(recordid)      //? что передать в body \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    alert('Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            this.removeItem(i);\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert('json parse error: ' + err);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Не удалось отправить запрос: \" + error);\r\n            });\r\n        }\r\n\r\n    else {alert (\"Недостаточно прав\");}\r\n    };\r\n\r\n\r\n    addrecord = () => {        \r\n        let path = window.location.pathname;\r\n        path = path.split('/');\r\n        let path0 = path[2];\r\n        let path1 = path[3];\r\n        path = \"/forum/\" + path0 + \"\" + path1 + \"/new\";    {/*правильно ли path */}\r\n        fetch(path, {\r\n            method: 'POST',\r\n            body: JSON.stringify()      //? что передать в body \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    alert('Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            this.state.records = this.state.records.concat(resp.result);\r\n                            this.closeModalrecord();\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert('json parse error: ' + err);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Не удалось отправить запрос: \" + error);\r\n            });\r\n        \r\n\r\n   \r\n    };\r\n\r\n\r\n    changerecord = () => {\r\n        let change = document.getElementById('changeTextArea').value;\r\n        this.setState({changerecord: change});\r\n        let p = this.state.nowuser[0];\r\n        let nowuserid = p.userid;\r\n        let nowgroup = p.group;\r\n       \r\n        if ((nowgroup==\"admin\" || nowgroup==\"moder\") || ((nowgroup==\"user\") && (nowuserid == this.state.user))) {\r\n        \r\n        fetch('/forum/records/change/' + this.state.changerecordid, {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.changerecord)      //? что передать в body \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    alert('Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            let i = this.state.changei;\r\n                            let g = this.state.records[i];\r\n                            g.record = this.state.changerecord;\r\n                            this.closeModalchangerec();\r\n                            }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert('json parse error: ' + err);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Не удалось отправить запрос: \" + error);\r\n            });\r\n        }\r\n\r\n    else {alert (\"Недостаточно прав\");}\r\n    };\r\n\r\n\r\n    addcoment = () => { \r\n        let recordid = this.state.recordid;\r\n        \r\n        let path = \"/forum/\" + recordid + \"/new\";    {/*правильно ли path */}\r\n       \r\n        fetch(path, {\r\n            method: 'POST',\r\n            body: JSON.stringify()      //? что передать в body \r\n        })\r\n            .then((response) => {\r\n                if (!response.ok)\r\n                    alert('Ошибка: неверный ответ от сервера.');\r\n                else {\r\n                    response.json().then((resp) => {\r\n                        if (resp.success === \"true\") {\r\n                            this.setState({newcoment: resp.result});\r\n                            this.closeModalcoment();\r\n                        }\r\n                        else {\r\n                            alert(resp.error);\r\n                        }\r\n                    }).catch((err) => {\r\n                        alert('json parse error: ' + err);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Не удалось отправить запрос: \" + error);\r\n            });\r\n        \r\n\r\n   \r\n    };\r\n\r\n\r\n\r\n   toggleChildMenu() {\r\n      this.setState({\r\n        open: !this.state.open\r\n      });\r\n   }\r\n\r\n    render() {\r\n        let table = [];\r\n        for (let i = this.state.records.length -1; i >= 0; i--) {\r\n            console.log(this.state.records[i]);\r\n            let p = this.state.records[i];\r\n            let user = \"/imgUpload/avatar_\" + p.userid + \".png\";\r\n            let record = p.recordid;\r\n            let userid = p.userid;\r\n            table.push (<tr>\r\n                <td>\r\n                <tr><Avatar userid = {user}/></tr> \r\n                <tr>{p.username} </tr>\r\n                </td>\r\n                <td>\r\n                <tr>{p.record}</tr>\r\n                <tr><ComentstoRecord recordid ={record} open={this.state.open} newcoment ={this.state.newcoment}/></tr>\r\n                </td>\r\n                <td> \r\n                <tr><Button onClick={(record, i, userid) => this.delrecord(record, i, userid)}>Удалить запись</Button> </tr>\r\n                <tr> <Button onClick={(record, i, userid) => this.settochangerec(record, i, userid), this.openModalchangerec.bind(this)}>Изменить запись</Button></tr>\r\n                <tr> <Button onClick={(record) => this.setrecordid(record), this.openModalcoment.bind(this)}>Добавить коментарий</Button> </tr>\r\n                </td>\r\n            </tr>);\r\n        }\r\n   \r\n\r\n        console.log(table);\r\n        let path = window.location.pathname;\r\n        let path1 = decodeURI(path);\r\n        path = path1.split('/');\r\n        path1 = path[3];\r\n        \r\n    \r\n\r\n        return ([\r\n            <div id =\"Records\">\r\n                <table className=\"table_blur\">\r\n                <caption><Button onClick={this.openModalrecord.bind(this)}>Добавить запись</Button>  {path1}   <Button onClick={this.toggleChildMenu.bind(this)}>Коментарии</Button> </caption>\r\n                    <tr>\r\n                        <th>Пользователь</th>\r\n                        <th>Сообщение</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    {table}\r\n                </table>\r\n            </div>,\r\n        <div id =\"Model\">\r\n        <Modal\r\n          isOpen={this.state.modalrecordIsOpen}\r\n          onRequestClose={this.closeModalrecord.bind(this)}\r\n          style={customStyles}\r\n          contentLabel=\"AddRecord Modal\">\r\n\r\n        <div>Добавьте запись</div>\r\n          <form>\r\n           <textarea name=\"record\"></textarea>                              {/*neme для идентефикации поля*/}\r\n            <Button onClick={this.addrecord}>Сохранить запись</Button>\r\n          </form> \r\n          </Modal>\r\n        </div>,\r\n\r\n        <div id =\"Model1\">\r\n        <Modal\r\n          isOpen={this.state.modalcomentIsOpen}\r\n          onRequestClose={this.closeModalcoment.bind(this)}\r\n          style={customStyles}\r\n          contentLabel=\"AddComent Modal\">\r\n\r\n        <div>Добавьте коментарий</div>\r\n          <form>\r\n           <textarea name=\"coment\"></textarea>                              {/*neme для идентефикации поля*/}\r\n            <Button onClick={this.addcoment}>Сохранить коментарий</Button>\r\n          </form> \r\n          </Modal>\r\n        </div>,\r\n\r\n        <div id =\"Model2\">\r\n        <Modal\r\n          isOpen={this.state.modalchangerecIsOpen}\r\n          onRequestClose={this.closeModalchangerec.bind(this)}\r\n          style={customStyles}\r\n          contentLabel=\"ChangeRec Modal\">\r\n\r\n        <div>Изменить запись</div>\r\n          <form>\r\n           <textarea id = \"changeTextArea\" name=\"changerec\"></textarea>                              {/*neme для идентефикации поля*/}\r\n            <Button onClick={this.changerecord}>Изменить запись</Button>\r\n          </form> \r\n          </Modal>\r\n        </div>,\r\n        \r\n]\r\n        );\r\n        \r\n        \r\n\r\n    \r\n    }\r\n}\r\n\r\nconst Records = connect((state) => state)(RecordsComponent);\r\nexport default RecordsComponent;","import HeaderComponent from '../Components/HeaderComponent';\r\nimport React from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport utocka from './utocka.png';\r\nimport Menu from '../Components/MenuComponent';\r\nimport SomeInfoxImgComponent from '../Components/SomeInfoxImgComponent';\r\nimport Records from '../Components/RecordsComponent'; \r\n\r\nif (window.location.pathname.indexOf('/records') + 1){\r\ndocument.title = \"Forum Page\";\r\n}\r\n\r\nfunction getUsername() {\r\n    let value = \"; \" + document.cookie;\r\n    let parts = value.split(\"; \" + 'username' + \"=\");\r\n    if (parts.length === 2)\r\n        return parts.pop().split(\";\").shift();\r\n    return \"username not set\";\r\n}\r\n\r\nconst initialState = {username: getUsername() };\r\n\r\nfunction reducerFunc (state, action) {\r\n    let newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case 'SET_USERNAME':\r\n            newState.username = action.username;\r\n            return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n}\r\n\r\nconst dataStore = createStore(reducerFunc, initialState);\r\n    \r\nclass ForumRecordsComponent extends Component {   \r\n\r\nrender() {\r\n\treturn (\r\n<div>\r\n<Provider store={dataStore}>\r\n<Menu/> \r\n</Provider>\r\n<SomeInfoxImgComponent info= \"Наслаждайтесь процессом, оставляйте коментарии)\"/>     \r\n\t\t\t <div id=\"main_records\">\r\n             <Records/> \r\n      <div id=\"footer\">\r\n        <div id=\"bot\">\r\n        \t<HeaderComponent author1=\"@ Хрулев Виктор\" author2=\"Возжаев Артем\" group=\"ИТМО 2018\" />\r\n        </div>\r\n      </div>\r\n    \t</div>\r\n</div>\r\n\t\t);\r\n}\r\n\r\n}\r\n\r\nexport default ForumRecordsComponent;","import React from 'react';\nimport { Component } from 'react';\n\nclass Line extends Component\n{\n    constructor(props) \n    {\n\t\tsuper(props);\n        this.label = props.label;\n        this.text = props.text;\n    }\n\n    render()\n    {\n        return(\n            <div className=\"profileUserInfoLine\">\n                <div className=\"heading is-color3-light\">\n                    {this.label}\n                </div>\n\n                <div className=\"title is-color3-light\">\n                    {this.text}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Line;","import React from 'react';\nimport { Component } from 'react';\nimport AvatarComponent from \"../AvatarComponent\";\nimport Line from \"./Line\";\n\nclass ProfileInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.user = props['user'];\n        this.userAvatar = props['userAvatar'];\n    }\n\n    render() {\n        return (\n            <div class=\"tile is-ancestor is-color1\">\n                <div class=\"tile is-color3-light profile-avatar is-vertical\">\n                    <AvatarComponent userid={this.userAvatar} />\n                    <h2 class=\"header\">Изменить</h2>\n                </div>\n\n                <div class=\"tile is-vertical is-7\">\n                    <Line label=\"Имя\" text={this.user.name} />\n\n                    <Line label=\"Дата рождения\" text={this.user.birthday} />\n\n                    <Line label=\"Пол\" text={this.user.gender} />\n\n                    <Line label=\"Спортивный разряд\" text={this.user.sportRate} />\n\n                    <Line label=\"Рейтинг\" text={this.user.rate} />\n\n                    <Line label=\"Email\" text={this.user.email} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport { Component } from 'react';\nimport Input from 'react-toolbox/lib/input';\nimport Button from 'react-toolbox/lib/button/Button';\nimport { Redirect } from \"react-router-dom\";\n\nclass ProfileEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.user = props.user;\n        this.state = { name: this.user.name, gender: this.user.gender, email: this.user.email, password: '', sportRate: this.user.sportRate, toProfileInfo: false};\n    }\n\n    handleChange = (name, value) => {\n        this.setState({...this.state, [name]: value});\n      };\n    \n    cancelEditing = () =>\n    {\n        this.state.toProfileInfo = true;\n        this.forceUpdate();\n    }\n\n    render() {\n\n        if(this.state.toProfileInfo === true)\n            return (<Redirect to='/users/profile' />);\n\n        return (\n            <div id=\"profileEdit\" className=\"is-color3\">\n                <section>\n                    <Input type='text' label='Имя' name='name' value={this.state.name} required onChange={this.handleChange.bind(this, 'name')} maxLength={16} />\n                    <Input type='text' label='Пол' name='gender' value={this.state.gender} required onChange={this.handleChange.bind(this, 'gender')} maxLength={1}  />\n                    <Input type='email' label='Email' icon='email' value={this.state.email} required onChange={this.handleChange.bind(this, 'email')} />\n                    <Input type='password' label='Пароль' name='password' value={this.state.password} required onChange={this.handleChange.bind(this, 'password')}  />\n                    <Input type='text' label='Спортивный разряд' name='sportRate' value={this.state.sportRate} required onChange={this.handleChange.bind(this, 'sportRate')} maxLength={1} />\n                </section>\n\n                <Button label='Сохранить' raised primary />\n                <Button  label='Отменить' onClick ={this.cancelEditing} raised />\n            </div>\n        );\n    }\n\n}\n\nexport default ProfileEdit;","import React from 'react';\nimport { Component } from 'react';\nimport { List, ListItem, ListSubHeader, ListDivider, ListCheckbox } from 'react-toolbox/lib/list';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport ProfileEdit from \"./ProfileEdit\";\nimport \"../../Profile.scss\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        //this.users = props.users;\n        this.users = [{ name: \"Ivan\", birthday: \"12.09.1293\", gender: \"М\", sportRate: \"1\", rate: \"23\", email: \"dfds@mail.com\" }];\n        //this.currentUser = props.currentUser;\n        this.currentUser = { name: \"Ivan\", birthday: \"12.09.1293\", gender: \"М\", sportRate: \"1\", rate: \"23\", email: \"dfds@mail.com\" };\n\n        this.selectedUser = this.currentUser;\n        this.match = props.match;\n    }\n\n    render() {\n\n        return (\n            <div class=\"is-color2 is-overlay\" id=\"profileMain\">\n\n                <Header pageInfo=\"Профиль\" />\n\n                <div class=\"tile is-ancestor\">\n                    <div class=\"tile is-vertical\">\n                        <div id=\"profileTitle\">\n                            <div class=\"tile is-1\">\n                                <h1 class=\"title\">Профиль</h1>\n                            </div>\n                            <div class=\"tile is-1\">\n                                <h2 class=\"header\"> <Link to={this.match.path+\"/edit\"}>Редактировать </Link> </h2>\n                            </div>\n                        </div>\n\n                        <Route path={`${this.match.path}/edit`} render={()=> <ProfileEdit user={this.currentUser}/>} />\n                        <Route\n                            exact\n                            path={this.match.path}\n                            render={() =>\n                                <ProfileInfo user={{ name: \"Ivan\", birthday: \"12.09.1293\", gender: \"М\", sportRate: \"1\", rate: \"23\", email: \"dfds@mail.com\" }}\n                            userAvatar=\"https://bit.ly/2R5sVBg\" /> }\n                        />\n                        \n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport { Component } from 'react';\n\nclass BoatPropertyProgress extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { min: props.min, max: props.max, value: props.value, name: props.name }\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"box\">\n                <p class=\"title is-3\">{this.state.name}</p>\n                <p class=\"subtitle is-5\">{this.state.value}/{this.state.max}</p>\n                <progress class=\"progress is-info\" value={this.state.value} max={this.state.max} min={this.state.min}>{this.state.value}</progress>\n            </div>\n        );\n    }\n\n}\n\nexport default BoatPropertyProgress;","import React from 'react';\nimport { Component } from 'react';\n\nclass PropertyInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { value: props.value, name: props.name }\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"box\">\n                <p class=\"title is-3\">{this.state.name}</p>\n                <p class=\"subtitle is-5\">{this.state.value}</p>\n            </div>\n        );\n    }\n\n}\n\nexport default PropertyInfo;","import React from 'react';\nimport { Component } from 'react';\nimport BoatPropertyProgress from './BoatPropertyProgress';\nimport PropertyInfo from './PropertyInfo';\n\nclass BoatInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { boat: '', details: [], speed: '', boost: '', maxWeight: '', control: '', weight: '', price: '' }\n\n        this.state.boat = props.boat;\n        this.state.details = props.details;\n        this.countProperties = (comp) => {\n            comp.state.details.forEach(function (detail) {\n                comp.state.speed = +detail.speed + +comp.state.speed;\n                comp.state.boost = +detail.boost + +comp.state.boost;\n                comp.state.control = +detail.control + +comp.state.control;\n                comp.state.weight = +detail.weight + +comp.state.weight;\n                comp.state.price = +detail.price + +comp.state.price;\n            });\n\n            comp.state.maxWeight = +comp.state.boat.maxWeight;\n            comp.state.speed = +comp.state.boat.speed + +comp.state.speed;\n            comp.state.boost = +comp.state.boat.boost + +comp.state.boost;\n            comp.state.control = +comp.state.boat.control + +comp.state.control;\n            comp.state.weight = +comp.state.boat.weight + +comp.state.weight;\n            comp.state.price = +comp.state.boat.price + +comp.state.price;\n        }\n    }\n\n    createDetailsTags = () => {\n        let tags = [];\n\n        this.state.details.forEach(function (detail) {\n            tags.push(<span class=\"tag is-warning is-medium\">{detail.name}<button class=\"delete is-small\"></button></span>);\n        });\n        console.log(tags);\n        return tags;\n    }\n\n    render() {\n\n        this.countProperties(this);\n\n\n        return (\n            <div>\n                <div >\n                    <figure class=\"image is-4by3\">\n                        <img src=\"https://bulma.io/images/placeholders/1280x960.png\" alt=\"Placeholder image\" />\n                    </figure>\n                </div>\n                <div >\n                    <h1 class=\"title is-1\">Характеристики</h1>\n                    <BoatPropertyProgress min='0' max='200' value={this.state.speed} name=\"Максимальная скорость\" />\n                    <BoatPropertyProgress min='0' max='150' value={this.state.boost} name=\"Ускорение\" />\n                    <BoatPropertyProgress min='0' max='60' value={this.state.maxWeight} name=\"Грузоподъемность\" />\n                    <BoatPropertyProgress min='0' max='10' value={this.state.control} name=\"Управляемость\" />\n                    <PropertyInfo name='Вес' value={this.state.weight} />\n                    <PropertyInfo name='Цена' value={this.state.price} />\n\n                    <div class=\"tags\">\n                        {this.createDetailsTags()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BoatInfo;","import React from 'react';\nimport { Component } from 'react';\n\nclass DetailsGroup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { name: props.name, details: props.details }\n    }\n\n    createDetailsPics = () => {\n        let detailsPics = []\n\n        this.state.details.forEach(detail => {\n            let detailCard =<div class=\"tile is-1\"><figure class=\"image is-128x128\"><img src=\"https://dfg.ng\" /></figure></div>;\n\n            detailsPics.push(detailCard);\n\n        });\n\n        return detailsPics;\n\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <p class=\"title is-3\">{this.state.name}</p>\n                <div class=\"tile is-ancestor\">\n                    {this.createDetailsPics()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DetailsGroup;","import React from 'react';\nimport { Component } from 'react';\nimport Header from \"../Header\";\nimport BoatInfo from \"./BoatInfo\";\nimport DetailsGroup from \"./DetailsGroup\";\nimport \"../../Profile.scss\";\n\nclass BoatConstructor extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { details: [], activeBoat: '', activeProducer: '' }\n\n        this.state.details.push({ speed: '40', price: '600', boost: '79', control: '-5', weight: '7', name: 'Yamaha Engine', type: 'Двигатель' });\n        this.state.details.push({ speed: '2', price: '0', boost: '2', control: '1', weight: '0', name: 'Парус из говна и палок', type: 'Парус' });\n\n        this.boats = [\n            { speed: '32', price: '450', maxWeight: '36', boost: '23', control: '6', weight: '43', label: 'boat1' },\n            { speed: '52', price: '4550', maxWeight: '26', boost: '43', control: '3', weight: '13', label: 'boat2' }\n        ]\n\n        this.state.activeBoat = this.boats[0];\n        this.state.activeProducer = { details: this.state.details };\n\n    }\n\n    getProducers = () => {\n\n    }\n\n    getBoats = () => {\n\n    }\n\n    createDetailsGroupsFromProducer = (producer) => {\n        let groupsNames = [];\n\n        for (let i = 0; i < producer.details.length; i++)\n            if (groupsNames.indexOf(producer.details[i].type) === -1)\n                groupsNames.push(producer.details[i].type);\n\n        let detailsGroups = [];\n\n        for (let i = 0; i < groupsNames.length; i++) {\n            let details = [];\n            for (let j = 0; j < producer.details.length; j++)\n                if (groupsNames[i] == producer.details[j].type) {\n                    details.push(producer.details[i]);\n                }\n\n            console.log(details);\n            detailsGroups.push(<DetailsGroup name={groupsNames[i]} details={details} />);\n        }\n\n        return detailsGroups;\n    }\n\n    handleBoatChange = (value) => {\n        this.setState({ activeBoat: value });\n    }\n\n    createBoatsOptions = () => {\n        let options = [];\n\n        for (let i = 0; i < this.boats.length; i++)\n            options.push(<option>{this.boats[i].label}</option>);\n\n        return options;\n    }\n\n    render() {\n        return (\n            <div class=\"is-color2 is-overlay\" id=\"boatConstructorMain\">\n                <Header pageInfo=\"Конструктор лодок\" />\n\n                <div class=\"tile is-ancestor\">\n                    <div class=\"tile is-4 is-color3-light is-vertical\">\n                        <h1 class=\"title is-1\">Лодка</h1>\n                        <div class=\"field\">\n                            <div class=\"control\">\n                                <div class=\"select is-medium\">\n                                    <select>\n                                        {this.createBoatsOptions()}\n                                    </select>\n                                </div>\n\n                            </div>\n                        </div>\n                        <BoatInfo boat={this.state.activeBoat}\n                            details={this.state.details} />\n                    </div>\n                    <div class=\"tile is-color3-light is-vertical\">\n                        <h1 class=\"title is-1\">Детали</h1>\n                        <div class=\"field\">\n                            <div class=\"control\">\n                                <div class=\"select is-medium\">\n                                    <select>\n                                        {this.createBoatsOptions()}\n                                    </select>\n                                </div>\n\n                            </div>\n                        </div>\n                        {this.createDetailsGroupsFromProducer(this.state.activeProducer)}\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default BoatConstructor;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { render } from 'react-dom';\nimport { Switch } from 'react-router';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport StartPage from '../src/Components/StartPage';\nimport Main from '../src/Components/Main';\nimport ForumSections from '../src/Components/ForumSectionsComponent';\nimport ForumTopics from '../src/Components/ForumTopicsComponent';\nimport ForumRecords from '../src/Components/ForumRecordsComponent';\nimport Profile from \"./Components/Profile/Profile\";\nimport BoatConstructor from \"./Components/BoatConstructor/BoatConstructor\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/records\" component={ForumRecords} />\n            <Route path=\"/topics\" component={ForumTopics} />\n            <Route path=\"/sections\" component={ForumSections} />\n            <Route path=\"/users/all\" component={Main} />\n            <Route path=\"/users/profile\" component={Profile} />\n            <Route path=\"/users/profile/logout\" component={StartPage} />\n            <Route path=\"/boats\" component={BoatConstructor} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { render } from 'react-dom';\nimport {Switch} from 'react-router';\nimport './index.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ThemeProvider from 'react-toolbox/lib/ThemeProvider';\nimport theme from './react-toolbox/theme';\nimport './react-toolbox/theme.css';\nimport App from '../src/App';\nimport StartPage from '../src/Components/StartPage';\nimport Main from '../src/Components/Main';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render((\n<ThemeProvider theme={theme}>\n <App/>\n </ThemeProvider>\n), document.getElementById('root'));\n\n   \n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/utocka.5403c0a3.png\";","module.exports={\"RTButton\":{\"button\":\"_1T6gd\",\"rippleWrapper\":\"_3rch8\",\"squared\":\"x_Fgj\",\"icon\":\"t6_L8\",\"solid\":\"HUuyg\",\"raised\":\"_33l7R _1T6gd x_Fgj HUuyg\",\"flat\":\"_2JPw5 _1T6gd x_Fgj\",\"floating\":\"_2U_a5 _1T6gd HUuyg\",\"mini\":\"_2for7\",\"toggle\":\"_3xRDd _1T6gd\",\"primary\":\"_29RI9\",\"accent\":\"mWBhu\",\"neutral\":\"_3ViU3\",\"inverse\":\"_1kgaQ\"},\"RTRipple\":{\"rippleWrapper\":\"cNe4x\",\"ripple\":\"_1zJTi\",\"rippleRestarting\":\"_3wQEe\",\"rippleActive\":\"_1eRuo\"},\"RTInput\":{\"input\":\"_2dBwA\",\"withIcon\":\"_2uwUs\",\"icon\":\"_2H9rJ\",\"inputElement\":\"_2WvFs\",\"bar\":\"fT1WI\",\"label\":\"_3NjcG\",\"fixed\":\"_1ANNN\",\"required\":\"HMiz1\",\"hint\":\"_1yQnr\",\"filled\":\"_3QmiH\",\"error\":\"_1p4yC\",\"counter\":\"_2dI1B\",\"disabled\":\"_2sOZC\",\"errored\":\"ZsBmg\",\"hidden\":\"_3Wr_7\"},\"RTNavigation\":{\"horizontal\":\"_1LRT1\",\"vertical\":\"_1A_xp\"},\"RTLink\":{\"icon\":\"_15_xe\",\"link\":\"_2EYXG\",\"active\":\"_5HYX\"},\"RTAppBar\":{\"appBar\":\"_3gTh_\",\"scrollHide\":\"_3S2IT\",\"flat\":\"tf7de\",\"fixed\":\"_3jqvO\",\"inner\":\"p2nb7\",\"title\":\"_3Tmun\",\"leftIcon\":\"HDVfX\",\"rightIcon\":\"_2DC6l\"}}"],"sourceRoot":""}